Pancake Sort
The first part is straightforward and is mainly a tool to use in the second part. If your peer has a hard time solving this part, encourage them to try one of the examples above and do it manually.
If they still don’t understand, help them by walking them through the following algorithm (see details in the full solution):
function flip(arr, k):
    for i from 0 to floor(k / 2):
        tmp = arr[i]
        arr[i] = arr[k - i]
        arr[k - i] = tmp
As for the second part, if your peer is stuck, you may hint that similarly to other sorting algorithms, the key part in this algorithm is to gradually sort the array through iterations.
If the vague hint above doesn’t help, ask them to perform a simpler task first - devise an algorithm that sends the maximal element to the last place in the array, and use that as an iteration step.
If your peer needs further assistance, guide them towards the following algorithm that iterates from the end of the array to the beginning, and in each iteration finds the i’th largest element and places it in the correct position in the array (see full solution for details):
```
function pancakeSort(arr):
    for i from (arr.length-1) to 1:
        maxIndex = findMaxIndexInPrefix(arr,i)
        flip(arr, maxIndex)
        flip(arr, i)

    return arr
```
